### ~/.rtorrent.rc
### rTorrent configuration file.
###
### Author: Nathan Campos <nathanpc@dreamintech.net>

# Base directories. [ Remember to create these directories  ]
method.insert = cfg.basedir,  private|const|string, (cat,"/mnt/hdd1/nathan/rtorrent/")
method.insert = cfg.download, private|const|string, (cat,(cfg.basedir),"downloads/")
method.insert = cfg.logs,     private|const|string, (cat,(cfg.basedir),"logs/")
method.insert = cfg.logfile,  private|const|string, (cat,(cfg.logs),"rtorrent-",(system.time),".log")
method.insert = cfg.session,  private|const|string, (cat,(cfg.basedir),".session/")
method.insert = cfg.watch,    private|const|string, (cat,(cfg.basedir),"watch/")

# Set network port range and randomize it.
network.port_range.set = 55950-56000
network.port_random.set = yes

# Disable trackerless torrents.
dht.mode.set = disable
dht = disable
protocol.pex.set = no
trackers.use_udp.set = no

# Setup encryption.
protocol.encryption.set = allow_incoming,try_outgoing,enable_retry,prefer_plaintext

# Limits for file handle resources optimized for a ulimit of 1024 (default).
network.http.max_open.set = 50
network.max_open_files.set = 600
network.max_open_sockets.set = 300

# Memory limits.
pieces.memory.max.set = 2500M
network.xmlrpc.size_limit.set = 32M

# Setting paths.
session.path.set = (cat, (cfg.session))
directory.default.set = (cat, (cfg.download))
log.execute = (cat, (cfg.logs), "execute.log")
log.xmlrpc = (cat, (cfg.logs), "xmlrpc.log")
execute.nothrow = sh, -c, (cat, "echo >",\
	(session.path), "rtorrent.pid", " ",(system.pid))

# Misc settings.
encoding.add = utf8
network.http.dns_cache_timeout.set = 25
schedule2 = monitor_diskspace, 15, 60, ((close_low_diskspace, 1000M))

# Some additional values and commands.
method.insert = system.startup_time, value|const, (system.time)
method.insert = d.data_path, simple,\
	"if=(d.is_multi_file),\
	    (cat, (d.directory), /),\
	    (cat, (d.directory), /, (d.name))"
method.insert = d.session_file, simple, "cat=(session.path), (d.hash), .torrent"

# Setup watch directories.
schedule2 = watch_load, 11, 10, ((load.verbose, (cat, (cfg.watch), "load/*.torrent")))
schedule2 = watch_start, 10, 10, ((load.start_verbose, (cat, (cfg.watch), "start/*.torrent")))

## Run the rTorrent process as a daemon in the background
## (and control via XMLRPC sockets)
#system.daemon.set = true
#network.scgi.open_local = (cat,(session.path),rpc.socket)
#execute.nothrow = chmod,770,(cat,(session.path),rpc.socket)

# Setup logging.
print = (cat, "Logging to ", (cfg.logfile))
log.open_file = "log", (cfg.logfile)
log.add_output = "info", "log"

# Set CGI port.
scgi_port = 127.0.0.1:5000

# vim:filetype=conf

